[package]
name = "car-core"
version = "0.1.0"
description = "Implementation of the car logic and communication protocol"
repository = "https://github.com/MrNossion/embedded-car"
authors = ["Milo Moisson"]
keywords = ["embedded", "car", "stm32f103c8", "bluetooth", "blue-pill"]
categories = ["embedded"]
readme = "../README.md"
license = "MIT"
edition = "2024"

[[bin]]
name = "car-core"
test = false
bench = false

[profile.dev]
opt-level = "z"
[profile.release]
debug = 2

[dependencies]
car-transport = { path = "../car-transport", features = ["defmt"] }

cortex-m = { version = "0.7", features = [
	"critical-section-single-core",
	"inline-asm"
] }
cortex-m-rt = "0.7"
defmt = "1"
defmt-rtt = "1"
panic-probe = { version = "1", features = ["print-defmt"] }

embassy-executor = { version = "0.7", features = [
	"arch-cortex-m",
	"defmt",
	"executor-thread",
] }
embassy-time = { version = "0.4", features = [
	"defmt",
	"defmt-timestamp-uptime",
	# Taken from the embassy examples. Corresponds to LSE Oscilliators frequency?
	"tick-hz-32_768"
] }
embassy-stm32 = { version = "0.2", features = [
	"defmt",
	"exti",
	"memory-x",

	"stm32f103c8",
	"time-driver-tim4",
] }

[patch.crates-io]
embassy-executor = { git = "https://github.com/embassy-rs/embassy" }
embassy-time = { git = "https://github.com/embassy-rs/embassy" }
embassy-stm32 = { git = "https://github.com/embassy-rs/embassy" }

[workspace.lints.rust]
unsafe_code = "forbid"
dead_code = { level = "allow", priority = 1 }
[workspace.lints.rustdoc]
all = "warn"
[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
# cargo = { level = "warn", priority = -1 }

# expect_used = "warn"
# missing_docs_in_private_items = "warn"
todo = "warn"
unwrap_used = "warn"
